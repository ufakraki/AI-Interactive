services:
  postgres:
    image: postgres:13
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  backend:
    build: ./backend
    command: sh -c "while ! nc -z postgres 5432; do sleep 1; done && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
  frontend:
    build: ./frontend
  ports:
    - "3000:3000"
  environment:
    - REACT_APP_API_URL=http://backend:8000/api/ # Yeni ekle
  volumes:
    - ./frontend:/app
    - /app/node_modules
  depends_on: # Yeni ekle
    - backend
